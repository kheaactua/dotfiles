#V2
hey, see update_ip.sh?  The goal is to have it write out the IP of my interfaces and upload that.  Because it's possible the interface changes though, can you put a function somewhere near the top to get all the interfaces that match a pattern?  I'm interfacted in the enx* interfaces
\n\n1
Can you write to the file yourself?  And make it executable at the same time?
What could I do to enable you to write to the file directly?
q
In update_ip.sh, can you refactor the style to use {} around the variable names?
The find_interfaces() function doens't work.  ls will return a list liek "docker0    enp2s0", so the grep for the pattern won't work.
I didn't know ls only supplied one entry at a time when being piped.  Right now the function returns all interfaces.  So it's not really filtering out anything.  Maybe the ls approach is better.  You can use `rg` instead of `grep`
In st.py here, I added a "# gnome" comment in the ServicesEnum.  There are comments right below that that explain what to do with it.  Can you create another toggler for gnome in the style of the others (see the files in toggles/) that will toggle the gnome proxy as described in the comments here?
In gnome.py, line 36 where it lists ignore-hosts, can you use the no_proxy content from self.settings?
Generally this is invoked with sudo already, so the sudo in gnome.py line 76 isn't required.  It should be mentioned if this isn't being run as root though.  This can be known by checking the self.is_super (see docker_service.py as and example).  Can you instead export this into the environment that will be used to run this command?
\nAlso, for the run_comma\nin gnome.py, the commands list, can you make each of their elements lists as well?  Actually split it into elements rather than running split() on it
I don't see the change in the files
When I run this, I'm getting an error about /root/.cache/dconf, but although I'm starting this with sudo, you can see in gnome.py I'm demoting the permissions to a user permission.  So it should be running as my user.  That said it seems like I'm missing injecting some env var and as a result root's .cache folder is being found
